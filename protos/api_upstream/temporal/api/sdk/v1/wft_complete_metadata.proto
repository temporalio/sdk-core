syntax = "proto3";

package temporal.api.sdk.v1;

option go_package = "go.temporal.io/api/sdk/v1;sdk";
option java_package = "io.temporal.api.sdk.v1";
option java_multiple_files = true;
option java_outer_classname = "WftCompleteMetadataProto";
option ruby_package = "Temporalio::Api::Sdk::V1";
option csharp_namespace = "Temporalio.Api.Sdk.V1";

message WFTCompleteMetadata {
  // Internal patches used by an SDK. SDKs must comply with the following behavior:
  //
  // During replay:
  // * If a patch is not recognized (value is too high or not defined), it must fail the workflow
  //   task.
  // * If a patch is recognized, it is stored in a set of used patches for the run. Code checks for
  //   that patch during and after this WFT are allowed to assume that the patch is present.
  // * If a code check for a patch does not find the patch in the set of used patches, it must take
  //   the branch corresponding to the absence of that patch.
  //
  // During non-replay execution of new WFTs:
  // * The SDK is free to use all patches it knows about. It must record any newly-used (IE: not
  //   previously recorded) patches when completing the WFT.
  //
  // SDKs which are too old to even know about this message at all are considered to produce
  // undefined behavior if they replay workflows which used this mechanism.
  InternalPatches internal_patches = 1;
}

message InternalPatches {
  // Patches used by Core. Non-Core-using languages may error if they see anything in this field.
  //
  // (-- api-linter: core::0141::forbidden-types=disabled
  //     aip.dev/not-precedent: These really shouldn't have negative values. --)
  repeated uint32 core_used_patches = 1;

  // Patches used by the SDK lang. No attempt is made to distinguish between different SDK languages
  // here as processing a workflow with a different language than the one which authored it is
  // already undefined behavior.
  //
  // (-- api-linter: core::0141::forbidden-types=disabled
  //     aip.dev/not-precedent: These really shouldn't have negative values. --)
  repeated uint32 lang_used_patches = 2;
}