/**
 * Core<->Lang request / response definitions
 */

syntax = "proto3";

package coresdk;

// Note: Intellij will think these imports don't work because of the slightly odd nature of
// the include paths. You can make it work by going to the "Protobuf Support" settings section
// and adding the "api_upstream" subdir as an include path.

import "temporal/api/common/v1/message.proto";
import "workflow_activation.proto";
import "workflow_activation_completion.proto";
import "activity_task.proto";
import "activity_result.proto";

/// A request as given to [crate::Core::poll_task]
message PollTaskReq {
    bool workflows = 1;
    bool activities = 2;
}

/// An instruction to perform work from core->lang SDK, returned from [crate::Core::poll_task]
message Task {
    // A unique identifier for this task
    bytes task_token = 1;
    // The type of task to be performed
    oneof variant {
        // Wake up a workflow
        coresdk.workflow_activation.WFActivation workflow = 2;
        // Start or cancel an activity
        coresdk.activity_task.ActivityTask activity = 3;
    }
}


/// Sent from lang side to core when calling [crate::Core::complete_task]
message TaskCompletion {
    // The id from the [Task] being completed
    bytes task_token = 1;
    oneof variant {
        /// Complete a workflow task
        coresdk.workflow_activation_completion.WFActivationCompletion workflow = 2;
        /// Complete an activity task
        coresdk.activity_result.ActivityResult activity = 3;
    }
}

/// A request as given to [crate::Core::send_activity_heartbeat]
message ActivityHeartbeat {
    string activity_id = 1;
    repeated temporal.api.common.v1.Payload details = 2;
}
