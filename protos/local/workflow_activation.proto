/**
 * Definitions of the different workflow activation jobs returned from [crate::Core::poll_task].
 * The lang SDK applies these activation jobs to drives workflows.
 */

syntax = "proto3";

package coresdk.workflow_activation;

import "google/protobuf/timestamp.proto";
import "dependencies/gogoproto/gogo.proto";
import "temporal/api/common/v1/message.proto";
import "activity_result.proto";
import "timer_result.proto";

/// Start a new workflow
message StartWorkflow {
    /// The identifier the lang-specific sdk uses to locate which workflow to execute
    string workflow_type = 1;
    /// The workflow id used on the temporal server
    string workflow_id = 2;
    /// Input to the workflow code - apply to the workflow method
    repeated temporal.api.common.v1.Payload arguments = 3;
    /// The seed must be used to initialize the random generator used by SDK.
    /// UpdateRandomSeed is used to deliver seed updates.
    uint64 randomness_seed = 4;

    // TODO: Do we need namespace here, or should that just be fetchable easily?
    //   will be others - workflow exe started attrs, etc
}

/// Cancel a running workflow
message CancelWorkflow {
}

/// Send a signal to a workflow
message SignalWorkflow {
    string name = 1;
    repeated temporal.api.common.v1.Payload arguments = 2;
}

/// Query a workflow
message QueryWorkflow {
    string name = 1;
    repeated temporal.api.common.v1.Payload arguments = 2;
}


/// Notify a workflow that a timer has been resolved
message ResolveTimer {
    string timer_id = 1;
    coresdk.timer_result.TimerResult result = 2;
}

/// Notify a workflow that an activity has been resolved
message ResolveActivity {
    string activity_id = 1;
    coresdk.activity_result.ActivityResult result = 2;
}

/// Update the workflow's random seed
message UpdateRandomSeed {
    uint64 randomness_seed = 1;
}

/// An instruction to the lang sdk to run some workflow code, whether for the first time or from
/// a cached state.
message WFActivation {
    /// The current time as understood by the workflow, which is set by workflow task started events
    google.protobuf.Timestamp timestamp = 1 [(gogoproto.stdtime) = true];
    /// The id of the currently active run of the workflow
    string run_id = 2;
    /// The things to do upon activating the workflow
    repeated WFActivationJob jobs = 3;
}

message WFActivationJob {
    oneof variant {
        /// Begin a workflow for the first time
        StartWorkflow start_workflow = 1;
        /// A timer has fired or was cancelled, allowing whatever was waiting on it (if anything) to proceed
        ResolveTimer resolve_timer = 2;
        /// An activity was resolved with, result could be completed, failed or cancelled
        ResolveActivity resolve_activity = 3;
        /// Workflow was reset. The randomness seed must be updated
        UpdateRandomSeed update_random_seed = 4;
        /// A request to cancel the workflow was received
        CancelWorkflow cancel_workflow = 5;
        /// A request to query the workflow was received
        QueryWorkflow query_workflow = 6;
        /// A request to signal the workflow was received
        SignalWorkflow signal_workflow = 7;
    }
}

