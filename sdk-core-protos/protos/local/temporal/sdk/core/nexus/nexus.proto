syntax = "proto3";

package coresdk.nexus;
option ruby_package = "Temporalio::Internal::Bridge::Api::Nexus";

import "temporal/api/common/v1/message.proto";
import "temporal/api/failure/v1/message.proto";
import "temporal/api/nexus/v1/message.proto";
import "temporal/sdk/core/common/common.proto";

// Used by core to resolve nexus operations.
message NexusOperationResult {
    oneof status {
        temporal.api.common.v1.Payload completed = 1;
        temporal.api.failure.v1.Failure failed = 2;
        temporal.api.failure.v1.Failure cancelled = 3;
        temporal.api.failure.v1.Failure timed_out = 4;
    }
}

// A response to a Nexus task
message NexusTaskCompletion {
    // The unique identifier for this task provided in the poll response
    bytes task_token = 1;
    oneof status {
        // The handler completed (successfully or not). Note that the response kind must match the
        // request kind (start or cancel).
        temporal.api.nexus.v1.Response completed = 2;
        // The handler could not complete the request for some reason.
        temporal.api.nexus.v1.HandlerError error = 3;
    }
}