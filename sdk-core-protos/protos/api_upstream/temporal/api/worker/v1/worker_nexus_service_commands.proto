syntax = "proto3";

package temporal.api.worker.v1;

option go_package = "go.temporal.io/api/worker/v1;worker";
option java_package = "io.temporal.api.worker.v1";
option java_multiple_files = true;
option java_outer_classname = "WorkerNexusServiceCommandsProto";
option ruby_package = "Temporalio::Api::Worker::V1";
option csharp_namespace = "Temporalio.Api.Worker.V1";

import "google/protobuf/field_mask.proto";
import "temporal/api/sdk/v1/worker_config.proto";

// (--
/////////////////////////////////////////////////////////////////////
// This file contains:
// - Conventions between server and worker.
// - Definitions for commands and payloads for server-worker communication via Nexus
//
// WORKER COMMANDS CONVENTIONS:
//
// Worker commands are used to manage worker configurations, operations, etc.
// Command names should match names defined in the server API.
// Command names are provided in StartOperationRequest.Operation field.
//
// PAYLOAD CONVENTIONS:
//
// In/out payloads namings follow the same convention as the regular API:
// - CommandNameRequest (input payload)
// - CommandNameResponse (output payload).
// - Empty payload if response is not needed/not expected
//
// COMMUNICATION PROTOCOL:
// - Transport: Nexus tasks on task queue
// - Server identifier: "sys-worker-service"
// - Task queue: "temporal-sys/worker-tq/{namespace_name}/{process_key}"
// --)

// Will be sent to the worker as a payload of the FetchWorkerConfig command.
message FetchWorkerConfigRequest {
  // List of worker identifiers. For now only a single worker instance key is supported.
  repeated string worker_instance_key = 1;
}

message FetchWorkerConfigResponse {
  message WorkerConfigEntry {
    // Worker instance key the config is for.
    string worker_instance_key = 1;

    temporal.api.sdk.v1.WorkerConfig worker_config = 2;
  }
  repeated WorkerConfigEntry worker_configs = 1;
}

// Will be sent to the worker as a payload of the UpdateWorkerConfig command.
message UpdateWorkerConfigRequest {
  // List of worker identifiers.
  repeated string worker_instance_key = 1;

  // The new worker config to be applied.
  temporal.api.sdk.v1.WorkerConfig worker_config = 2;

  // Controls which fields from `worker_config` will be applied
  google.protobuf.FieldMask update_mask = 3;
}

message UpdateWorkerConfigResponse {
}